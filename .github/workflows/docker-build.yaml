name: Build and Publish Docker Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    env:
      JAVA_VERSION: 17
      NODE_VERSION: lts/*  # This will pick the latest LTS version (Node 18)
      IMAGE_NAME: thingsboard
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    
    steps:
      
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install npm packages
        run: |
          npm install -g cross-env 
          npm install -g webpack

      - name: Install xmllint
        run: |
          sudo apt-get update && sudo apt-get install -y libxml2-utils
          sudo apt-get clean

      - name: Build the project
        run: |
          mvn license:format install -DskipTests -Ddockerfile.skip=false
          
      - name: Extract Docker image name from pom.xml
        id: extract-image-name
        run: |
          IMAGE_NAME=$(xmllint --xpath "string(//properties/docker.image.name)" pom.xml)
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker images
        run: |
          IMAGE_TAG=$(xmllint --xpath "string(//properties/docker.image.tag)" pom.xml)
          docker push "${IMAGE_NAME}:${IMAGE_TAG}"
      - name: List Docker images
        run: |
          docker image ls

      - name: Clean up temporary files
        if: always()
        run: |
          sudo rm -rf /tmp/*
