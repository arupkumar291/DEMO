# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package -DskipTests


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v1
      - name: Setup SSH Keys and known_hosts
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
            run: |
              mkdir -p ~/.ssh
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              ssh-agent -a $SSH_AUTH_SOCK > /dev/null
              ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"

      - name: Some task that fetches dependencies
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
            run: ./fetch-deps.sh

      - name: Deploy to server
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: './application/target/*.deb'                                                  # Local file path - REQUIRED false - DEFAULT ./
          remote: '/opt/tesenso'                                                 # Remote file path - REQUIRED false - DEFAULT ~/
          host: ${{secrets.SERVER_IP}}                                      # Remote server address - REQUIRED true
          user: ${{secrets.SERVER_USERNAME}}                                      # Remote server user - REQUIRED true
          password: ${{secrets.SERVER_PASSWORD}}                              # User password - REQUIRED at least one of "password" or "key"
#          key: ${{secrets.SSH_PRIVATE_KEY}}                                        # Remote server private key - REQUIRED at least one of "password" or "key"
          pre_upload: echo "This will be executed before the upload!"  # Command to run via ssh before scp upload - REQUIRED false
          post_upload: echo "This will be executed after the upload!"  # Command to run via ssh after scp upload - REQUIRED false
          ssh_options: -o StrictHostKeyChecking=no                     # A set of ssh_option separated by -o - REQUIRED false - DEFAULT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          scp_options: -v




