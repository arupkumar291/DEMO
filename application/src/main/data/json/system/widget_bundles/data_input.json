{
  "widgetsBundle": {
    "alias": "Data_input_widgets",
    "title": "Data input widgets",
    "image": null
  },
  "widgetTypes": [
    {
      "alias": "Email_input",
      "name": "Email input",
      "descriptor": {
        "type": "latest",
        "sizeX": 10.5,
        "sizeY": 3,
        "resources": [],
        "templateHtml": "<div id='datasourceId' class='tbDatasource-container'>\r\n    <table id='tableId'  class='tbDatasource-table' style=\"text-align: left;\" ng-if=\"labelPosition === 'left'\">\r\n        <tr>\r\n            <td class='tbDatasource-data-key' ng-style=\"labelCellStyle\" id='labelCellId' ng-click=\"showPrerenderedDialog()\">{{label}}</td>\r\n            <td class='tbDatasource-value' id='cellId' style=\"text-align: left;\" ng-style=\"valueCellStyle\" ng-click=\"showPrerenderedDialog()\">{{cellValue}}</td>\r\n        </tr>\r\n    </table>\r\n    <table id='tableId' class='tbDatasource-table' style=\"text-align: center;\" ng-if=\"labelPosition === 'top'\">\r\n        <tr style='vertical-align: bottom;'>\r\n            <td class='tbDatasource-data-key' ng-style='labelCellStyle' id='labelCellId' ng-click=\"showPrerenderedDialog()\">{{label}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td class='tbDatasource-value' id='cellId' ng-style=\"valueCellStyle\" ng-click=\"showPrerenderedDialog()\">{{cellValue}}</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n<div style=\"visibility: hidden\">\r\n    <form name=\"DialogForm\" ng-submit=\"submit()\">\r\n        <div class=\"md-dialog-container\" id=\"myStaticDialog\">\r\n            <md-dialog>\r\n<md-toolbar md-scroll-shrink>\r\n    <div class=\"md-toolbar-tools\">{{DialogTitle}}</div>\r\n  </md-toolbar>\r\n<md-progress-linear class=\"md-warn\" md-mode=\"indeterminate\" ng-disabled=\"progressDisabled\"></md-progress-linear>                \r\n                <md-input-container class=\"md-block\">\r\n                    <label>Email</label>\r\n                    <input required type=\"text\" placeholder=\"Adresse Email\" name=\"dialogData\" ng-model=\"dialogData.value\"  ng-pattern='/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/'\r\n                    />\r\n\r\n                    <div ng-messages=\"DialogForm.dialogData.$error\" multiple md-auto-hide=\"false\">\r\n                        <div ng-message=\"required\">\r\n                            donnÃ©e requise!!!\r\n                        </div>\r\n\r\n                        <div ng-message=\"pattern\">\r\n                            donnÃ©e invalide!!!\r\n                        </div>\r\n\r\n                    </div>\r\n                </md-input-container>\r\n\r\n                <div layout=\"row\" layout-wrap layout-margin layout-align=\"center\">\r\n                    <md-button ng-click=\"close()\" class=\"md-raised md-primary\">\r\n                        Annuler\r\n                    </md-button>\r\n                    <md-button ng-click=\"submit()\" class=\"md-raised md-primary\" ng-disabled=\"!DialogForm.dialogData.$valid\">\r\n                        Valider\r\n                    </md-button>\r\n\r\n                </div>\r\n            </md-dialog>\r\n        </div>\r\n    </form>\r\n</div>",
        "templateCss": "#container {\n    overflow: auto;\n}\n\n.tbDatasource-container {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.tbDatasource-table {\n    width: 100%;\n    height: 100%;\n    border-collapse: collapse;\n    white-space: nowrap;\n    font-weight: 100;\n    text-align: right;\n}\n\n.tbDatasource-table td {\n    padding: 5px;\n    position: relative;\n    box-sizing: border-box;\n}\n\n.tbDatasource-data-key {\n    opacity: 0.7;\n    font-weight: 400;\n    font-size: 3.500rem;\n}\n\n.tbDatasource-value {\n    font-size: 5.000rem;\n}\n",
        "controllerScript": "self.onInit = function() {\n\n    self.ctx.labelPosition = self.ctx.settings.labelPosition ||\n        'left';\n    self.ctx.$scope.labelPosition = self.ctx.labelPosition;\n    self.ctx.$scope.newValue = 0;\n    self.ctx.$scope.valueCellStyle = {};\n    self.ctx.$scope.labelCellStyle = {};\n    self.ctx.attributeData = {};\n    self.ctx.attributeData.valid = false;\n    self.ctx.attributeData.Scope = \"SERVER_SCOPE\";\n    if (self.ctx.settings.attributeScope == 'Client')\n        self.ctx.attributeData.Scope = 'CLIENT_SCOPE';\n    if (self.ctx.settings.attributeScope == 'Shared')\n        self.ctx.attributeData.Scope = 'SHARED_SCOPE';\n\n    self.ctx.$scope.DialogTitle = self.ctx.settings.DialogTitle ||\n        \"Mise a jour\";\n    var attributeService = self.ctx.$scope.$injector.get(\n        'attributeService');\n    var $mdDialog = self.ctx.$scope.$injector.get(\n        '$mdDialog');\n    self.ctx.CurrentUser= self.ctx.$scope.$injector.get(\n        'userService').getCurrentUser();\n    self.ctx.username=(self.ctx.CurrentUser.firstName || \"\")+\" \"+(self.ctx.CurrentUser.lastName || \"\");\n    self.ctx.username+=\" \"+(self.ctx.CurrentUser.sub || \"\");\n    self.ctx.username=self.ctx.username.trim();\n        \n    self.ctx.$scope.dialogData = {};\n    self.ctx.$scope.progressDisabled = true;\n    self.ctx.log = {};\n    if (self.ctx.datasources.length > 0) {\n        var tbDatasource = self.ctx.datasources[0];\n\n        self.ctx.datasourceContainer = $(\n            '#datasourceId', self.ctx.$container);\n        var table = $('#tableId', self.ctx.$container);\n\n        if (tbDatasource.dataKeys.length > 0) {\n            var dataKey = tbDatasource.dataKeys[0];\n            self.ctx.logEnabled = dataKey.settings.logEnable ||\n                false;\n            self.ctx.logLabel = dataKey.settings.logLabel ||\n                \"\";\n            self.ctx.$scope.label = \"ðŸ“§\";\n            self.ctx.labelCell = $('#labelCellId',\n                table);\n            self.ctx.valueCell = $('#cellId', table);\n            if (dataKey.type == 'attribute') {\n                self.ctx.attributeData.entityType =\n                    tbDatasource.entityType;\n                self.ctx.attributeData.entityId =\n                    tbDatasource.entityId;\n                self.ctx.attributeData.dataKey = [{}];\n                self.ctx.attributeData.dataKey[0].key =\n                    dataKey.name;\n                self.ctx.attributeData.valid = true;\n            }\n        }\n    }\n\n    self.ctx.$scope.showPrerenderedDialog = function() {\n        if (self.ctx.attributeData.valid) {\n            if (!self.ctx.isEdit) {\n                self.ctx.$scope.dialogData.value =\n                    self.ctx.$scope.newValue;\n                self.ctx.oldValue = self.ctx.$scope\n                    .newValue;\n                self.ctx.$scope.progressDisabled =\n                    true;\n                $mdDialog.show({\n                    contentElement: $(\n                        '#myStaticDialog',\n                        self.ctx.$container\n                    ),\n                    parent: angular.element(\n                        document.body)\n                });\n            }\n        }\n    };\n\n    self.ctx.$scope.close = function() {\n        $mdDialog.cancel();\n    };\n    self.ctx.$scope.submit = function() {\n        var logRequest;\n        if (self.ctx.attributeData.valid) {\n            //update attribute\"\n            self.ctx.attributeData.dataKey[0].value =\n                self.ctx.$scope.dialogData.value;\n            self.ctx.$scope.progressDisabled =\n                false;\n            var requete = attributeService.saveEntityAttributes(\n                self.ctx.attributeData.entityType,\n                self.ctx.attributeData.entityId,\n                self.ctx.attributeData.Scope,\n                self.ctx.attributeData.dataKey);\n            requete.then(\n                function success(response) {\n                    if (self.ctx.logEnabled) {\n                        self.ctx.log.Parametre =\n                            self.ctx.logLabel;\n                        self.ctx.log[\n                            'Old value'\n                        ] = self.ctx.oldValue;\n                        self.ctx.log[\n                                'New value'\n                            ] = self.ctx.$scope\n                            .dialogData.value;\n                        self.ctx.log.Utilisateur=self.ctx.username;\n                        var tsData = [{}];\n                        tsData[0].key = \"log\";\n                        tsData[0].value = JSON.stringify(\n                            self.ctx.log,\n                            undefined, 2);\n                        logRequest =\n                            attributeService.saveEntityAttributes(\n                                self.ctx.attributeData\n                                .entityType,\n                                self.ctx.attributeData\n                                .entityId,\n                                \"timeseries/SERVER_SCOPE\",\n                                tsData);\n                    }\n                    self.ctx.$scope.progressDisabled =\n                        true;\n                    $mdDialog.hide();\n                },\n                function fail(rejection) {\n                    self.ctx.$scope.progressDisabled =\n                        true;\n                    $mdDialog.cancel();\n                }\n            );\n        } else {\n            // \"invalid attribute\"\n            $mdDialog.cancel();\n        }\n\n    };\n\n    $.fn.textWidth = function() {\n        var html_org = $(this).html();\n        var html_calc = '<span>' + html_org +\n            '</span>';\n        $(this).html(html_calc);\n        var width = $(this).find('span:first').width();\n        $(this).html(html_org);\n        return width;\n    };\n    self.onResize();\n};\n\nself.onDataUpdated = function() {\n    function isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    if (self.ctx.valueCell && self.ctx.data.length > 0) {\n        var cellData = self.ctx.data[0];\n        if (cellData.data.length > 0) {\n            var tvPair = cellData.data[cellData.data.length -\n                1];\n            var txtValue = tvPair[1];\n            self.ctx.$scope.newValue = txtValue;\n            self.ctx.$scope.cellValue = txtValue;\n            self.ctx.valueCell.html(txtValue);\n            var targetWidth;\n            var minDelta;\n            if (self.ctx.labelPosition === 'left') {\n                targetWidth = self.ctx.datasourceContainer\n                    .width() - self.ctx.labelCell.width();\n                minDelta = self.ctx.width / 16 + self.ctx\n                    .padding;\n            } else {\n                targetWidth = self.ctx.datasourceContainer\n                    .width();\n                minDelta = self.ctx.padding;\n            }\n            var delta = targetWidth - self.ctx.valueCell\n                .textWidth();\n            var fontSize = self.ctx.valueFontSize;\n            //console.log(\"font size: \"+fontSize+\" / minDelta : \"+minDelta+\" Target width : \"+targetWidth);\n            if (targetWidth > minDelta) {\n                while (delta < minDelta && fontSize > 6) {\n                    fontSize--;\n                    self.ctx.$scope.valueCellStyle[\n                            'font-size'] = fontSize +\n                        'px';\n                    delta = targetWidth - self.ctx.valueCell\n                        .textWidth();\n                }\n            }\n        }\n    }\n    self.ctx.$scope.$digest();\n};\n\nself.onResize = function() {\n    //console.log(\"Resize\");\n    var labelFontSize;\n    if (self.ctx.labelPosition === 'top') {\n        self.ctx.padding = 5; //self.ctx.height / 20;\n        labelFontSize = self.ctx.height / 4;\n        self.ctx.valueFontSize = self.ctx.height / 2;\n    } else {\n        self.ctx.padding = 5; //self.ctx.width / 50;\n        labelFontSize = self.ctx.height / 2.5;\n        self.ctx.valueFontSize = self.ctx.height / 2;\n        if (self.ctx.width / self.ctx.height <= 2.7) {\n            labelFontSize = self.ctx.width / 7;\n            self.ctx.valueFontSize = self.ctx.width / 6;\n        }\n    }\n    self.ctx.padding = Math.min(2, self.ctx.padding);\n\n    if (self.ctx.labelCell) {\n        self.ctx.$scope.labelCellStyle['font-size'] =\n            labelFontSize + 'px';\n        self.ctx.$scope.labelCellStyle.padding =\n            self.ctx.padding + 'px';\n    }\n    if (self.ctx.valueCell) {\n        self.ctx.$scope.valueCellStyle['font-size'] =\n            self.ctx.valueFontSize + 'px';\n        self.ctx.$scope.valueCellStyle.padding =\n            self.ctx.padding + 'px';\n    }\n};\n\nself.typeParameters = function() {\n    return {\n        maxDatasources: 1,\n        maxDataKeys: 1\n    };\n};\n\n\nself.onDestroy = function() {};",
        "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"labelPosition\": {\n                \"title\": \"Label position\",\n                \"type\": \"string\",\n                \"default\": \"left\"\n            },\n            \"DialogTitle\": {\n                \"title\": \"Dialog title\",\n                \"type\": \"string\",\n                \"default\": \"\"\n            },\n            \"attributeScope\": {\n                \"title\": \"Attribute Scope\",\n                \"type\": \"string\",\n                \"default\": \"Server\"\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [{\n            \"key\": \"labelPosition\",\n            \"type\": \"rc-select\",\n            \"multiple\": false,\n            \"items\": [{\n                    \"value\": \"left\",\n                    \"label\": \"Left\"\n                },\n                {\n                    \"value\": \"top\",\n                    \"label\": \"Top\"\n                }\n            ]\n        },\n        \"DialogTitle\",\n        {\n            \"key\": \"attributeScope\",\n            \"type\": \"rc-select\",\n            \"multiple\": false,\n            \"items\": [{\n                    \"value\": \"Client\",\n                    \"label\": \"Client\"\n                },\n                {\n                    \"value\": \"Server\",\n                    \"label\": \"Server\"\n                },\n                {\n                    \"value\": \"Shared\",\n                    \"label\": \"Shared\"\n                }\n            ]\n        }\n        \n    ]\n}",
        "dataKeySettingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"logEnable\": {\n                \"title\": \"Enable log\",\n                \"type\": \"boolean\",\n                \"default\": false\n            },\n            \"logLabel\": {\n                \"title\": \"Log label\",\n                \"type\": \"string\"\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [\n        \"logEnable\",\"logLabel\"\n    ]\n}\n",
        "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"ðŸ“§\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.2392660816082064,\"funcBody\":\"var value = \\\"rejeb.nabil@gnet.tn\\\"\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"4px\",\"settings\":{\"labelPosition\":\"left\",\"DialogTitle\":\"Email de notification\",\"attributeScope\":\"Server\"},\"title\":\"Email input\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"units\":\"Â°C\",\"decimals\":1,\"useDashboardTimewindow\":true,\"showLegend\":false,\"widgetStyle\":{},\"actions\":{}}"
      }
    },
    {
      "alias": "numeric_data_input",
      "name": "Numeric data input",
      "descriptor": {
        "type": "latest",
        "sizeX": 8.5,
        "sizeY": 3.5,
        "resources": [],
        "templateHtml": "<div id='datasourceId' class='tbDatasource-container'>\r\n    <table id='tableId' class='tbDatasource-table' style=\"text-align: left;\"\r\n        ng-if=\"labelPosition === 'left'\">\r\n        <col width='30%'>\r\n        <col width='70%'>\r\n        <tr>\r\n            <td class='tbDatasource-data-key' ng-style=\"labelCellStyle\" id='labelCellId'\r\n                ng-click=\"showPrerenderedDialog()\">{{label}}</td>\r\n            <td class='tbDatasource-value' id='cellId' style=\"text-align: right;\"\r\n                ng-style=\"valueCellStyle\" ng-click=\"showPrerenderedDialog()\">{{cellValue}}</td>\r\n        </tr>\r\n    </table>\r\n    <table id='tableId' class='tbDatasource-table' style=\"text-align: center;\"\r\n        ng-if=\"labelPosition === 'top'\">\r\n        <col width='30%'>\r\n        <col width='70%'>\r\n        <tr style='vertical-align: bottom;'>\r\n            <td class='tbDatasource-data-key' ng-style='labelCellStyle' id='labelCellId ' ng-click=\"showPrerenderedDialog()\">{{label}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td class='tbDatasource-value' id='cellId' ng-style=\"valueCellStyle\"\r\n                ng-click=\"showPrerenderedDialog()\">{{cellValue}}</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n<div style=\"visibility: hidden\">\r\n    <form name=\"DialogForm\" ng-submit=\"submit()\">\r\n        <div class=\"md-dialog-container\" id=\"myStaticDialog\">\r\n            <md-dialog>\r\n                <md-toolbar md-scroll-shrink>\r\n                    <div class=\"md-toolbar-tools\">{{DialogTitle}}</div>\r\n                </md-toolbar>\r\n                <md-progress-linear class=\"md-warn\" md-mode=\"indeterminate\" ng-disabled=\"progressDisabled\"></md-progress-linear>\r\n                <md-input-container class=\"md-block\">\r\n                    <label>Nouvelle valeur</label>\r\n                    <input required type=\"number\" step=\"any\" name=\"dialogData\" ng-model=\"dialogData.value\"\r\n                        min={{lowLimit}} max={{highLimit}} ng-pattern=\"pattern\"\r\n                    />\r\n\r\n                    <div ng-messages=\"DialogForm.dialogData.$error\" multiple md-auto-hide=\"false\">\r\n                        <div ng-message=\"required\">\r\n                            donnÃ©e requise!!!\r\n                        </div>\r\n\r\n                        <div ng-message=\"min\">\r\n                            Valeur trop petite!!!\r\n                        </div>\r\n\r\n                        <div ng-message=\"pattern\">\r\n                            donnÃ©e invalide!!!\r\n                        </div>\r\n\r\n                        <div ng-message=\"max\">\r\n                            Valeur trop grande!!!\r\n                        </div>\r\n                    </div>\r\n                </md-input-container>\r\n\r\n                <div layout=\"row\" layout-wrap layout-margin layout-align=\"center\">\r\n                    <md-button ng-click=\"close()\" class=\"md-raised md-primary\">\r\n                        Annuler\r\n                    </md-button>\r\n                    <md-button ng-click=\"submit()\" class=\"md-raised md-primary\" ng-disabled=\"!DialogForm.dialogData.$valid\">\r\n                        Valider\r\n                    </md-button>\r\n\r\n                </div>\r\n            </md-dialog>\r\n        </div>\r\n    </form>\r\n</div>",
        "templateCss": "#container {\n    overflow: auto;\n}\n\n.tbDatasource-container {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.tbDatasource-table {\n    width: 100%;\n    height: 100%;\n    border-collapse: collapse;\n    white-space: nowrap;\n    font-weight: 100;\n    text-align: right;\n}\n\n.tbDatasource-table td {\n    padding: 12px;\n    position: relative;\n    box-sizing: border-box;\n}\n\n.tbDatasource-data-key {\n    opacity: 0.7;\n    font-weight: 400;\n    font-size: 3.500rem;\n}\n\n.tbDatasource-value {\n    font-size: 5.000rem;\n}\n",
        "controllerScript": "self.onInit = function() {\n\n    self.ctx.labelPosition = self.ctx.settings.labelPosition ||\n        'left';\n    self.ctx.$scope.labelPosition = self.ctx.labelPosition;\n    self.ctx.$scope.newValue = 0;\n    self.ctx.$scope.valueCellStyle = {};\n    self.ctx.$scope.labelCellStyle = {};\n    self.ctx.$scope.lowLimit = \"\";\n    self.ctx.$scope.highLimit = \"\";\n    self.ctx.$scope.pattern = new RegExp(\n        \"^(\\\\+|-)?\\\\d+$\");\n    if (self.ctx.decimals > 0) {\n        self.ctx.$scope.pattern = new RegExp(\n            \"^-?\\\\d*\\\\.{0,1}\\\\d{1,\" +\n            self.ctx.decimals + \"}$\");\n    }\n    //console.log(self.ctx.$scope.pattern);\n    self.ctx.attributeData = {};\n    self.ctx.attributeData.valid = false;\n    self.ctx.log = {};\n\n    self.ctx.attributeData.Scope = \"SERVER_SCOPE\";\n    if (self.ctx.settings.attributeScope == 'Client')\n        self.ctx.attributeData.Scope = 'CLIENT_SCOPE';\n    if (self.ctx.settings.attributeScope == 'Shared')\n        self.ctx.attributeData.Scope = 'SHARED_SCOPE';\n    if (self.ctx.settings.lowLimitEnable) self.ctx.$scope\n        .lowLimit = self.ctx.settings.lowLimit;\n    if (self.ctx.settings.highLimitEnable) self.ctx.$scope\n        .highLimit = self.ctx.settings.highLimit;\n    self.ctx.$scope.DialogTitle = self.ctx.settings.DialogTitle ||\n        \"Mise a jour\";\n    var attributeService = self.ctx.$scope.$injector.get(\n        'attributeService');\n    var $mdDialog = self.ctx.$scope.$injector.get(\n        '$mdDialog');\n    self.ctx.CurrentUser = self.ctx.$scope.$injector.get(\n        'userService').getCurrentUser();\n    self.ctx.username = (self.ctx.CurrentUser.firstName ||\n        \"\") + \" \" + (self.ctx.CurrentUser.lastName ||\n        \"\");\n    self.ctx.username += \" \" + (self.ctx.CurrentUser.sub ||\n        \"\");\n    self.ctx.username = self.ctx.username.trim();\n    //console.log(JSON.stringify(self.ctx.username)); \n\n    self.ctx.$scope.dialogData = {};\n    self.ctx.$scope.progressDisabled = true;\n    if (self.ctx.datasources.length > 0) {\n        var tbDatasource = self.ctx.datasources[0];\n        //console.log(JSON.stringify(tbDatasource));\n\n        self.ctx.datasourceContainer = $(\n            '#datasourceId', self.ctx.$container);\n        var table = $('#tableId', self.ctx.$container);\n\n        if (tbDatasource.dataKeys.length > 0) {\n            var dataKey = tbDatasource.dataKeys[0];\n            self.ctx.logEnabled = dataKey.settings.logEnable ||\n                false;\n            self.ctx.logLabel = dataKey.settings.logLabel ||\n                dataKey.label;\n            self.ctx.$scope.label = dataKey.label;\n            self.ctx.labelCell = $('#labelCellId',\n                table);\n            self.ctx.valueCell = $('#cellId', table);\n            if (dataKey.type == 'attribute') {\n                self.ctx.attributeData.entityType =\n                    tbDatasource.entityType;\n                self.ctx.attributeData.entityId =\n                    tbDatasource.entityId;\n                self.ctx.attributeData.dataKey = [{}];\n                self.ctx.attributeData.dataKey[0].key =\n                    dataKey.name;\n                self.ctx.attributeData.valid = true;\n                //console.log(JSON.stringify(self.ctx.attributeData));\n            }\n        }\n    }\n\n    self.ctx.$scope.showPrerenderedDialog = function() {\n        if (self.ctx.attributeData.valid) {\n            if (!self.ctx.isEdit) {\n                self.ctx.$scope.dialogData.value =\n                    self.ctx.$scope.newValue;\n                self.ctx.oldValue = self.ctx.$scope\n                    .newValue;\n                self.ctx.$scope.progressDisabled =\n                    true;\n                $mdDialog.show({\n                    contentElement: $(\n                        '#myStaticDialog',\n                        self.ctx.$container\n                    ),\n                    parent: angular.element(\n                        document.body)\n                });\n            }\n        }\n    };\n\n    self.ctx.$scope.close = function() {\n        $mdDialog.cancel();\n    };\n    self.ctx.$scope.submit = function() {\n        var logRequest;\n        if (self.ctx.attributeData.valid) {\n            //console.log(\"update attribute\");\n            self.ctx.attributeData.dataKey[0].value =\n                self.ctx.$scope.dialogData.value;\n            //console.log(JSON.stringify(self.ctx.attributeData));\n            self.ctx.$scope.progressDisabled =\n                false;\n            var requete = attributeService.saveEntityAttributes(\n                self.ctx.attributeData.entityType,\n                self.ctx.attributeData.entityId,\n                self.ctx.attributeData.Scope,\n                self.ctx.attributeData.dataKey);\n            requete.then(\n                function success(response) {\n                    /*  console.log(\"Reponse : \" +\n                          JSON.stringify(\n                              response));*/\n                    if (self.ctx.logEnabled) {\n                        self.ctx.log.Parametre =\n                            self.ctx.logLabel;\n                        self.ctx.log[\n                            'Ancienne valeur'\n                        ] = self.ctx.oldValue;\n                        self.ctx.log[\n                                'Nouvelle valeur'\n                            ] = self.ctx.$scope\n                            .dialogData.value;\n                        self.ctx.log.Utilisateur =\n                            self.ctx.username;\n                        var tsData = [{}];\n                        tsData[0].key = \"log\";\n                        tsData[0].value = JSON.stringify(\n                            self.ctx.log,\n                            undefined, 2);\n                        //console.log(JSON.stringify(tsData));\n                        logRequest =\n                            attributeService.saveEntityAttributes(\n                                self.ctx.attributeData\n                                .entityType,\n                                self.ctx.attributeData\n                                .entityId,\n                                \"timeseries/SERVER_SCOPE\",\n                                tsData);\n                    }\n                    self.ctx.$scope.progressDisabled =\n                        true;\n                    $mdDialog.cancel();\n                },\n                function fail(rejection) {\n                    /*  console.log(\"Rejection : \" +\n                          JSON.stringify(\n                              rejection));*/\n                    self.ctx.$scope.progressDisabled =\n                        true;\n                    $mdDialog.cancel();\n                }\n            );\n        } else {\n            // console.log(\"invalid attribute\");\n            $mdDialog.cancel();\n        }\n    };\n\n    $.fn.textWidth = function() {\n        var html_org = $(this).html();\n        var html_calc = '<span>' + html_org +\n            '</span>';\n        $(this).html(html_calc);\n        var width = $(this).find('span:first').width();\n        $(this).html(html_org);\n        return width;\n    };\n    //console.log(\"call Resize\");\n    self.onResize();\n};\n\nself.onDataUpdated = function() {\n    function isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    if (self.ctx.valueCell && self.ctx.data.length > 0) {\n        var cellData = self.ctx.data[0];\n        if (cellData.data.length > 0) {\n            var tvPair = cellData.data[cellData.data.length -\n                1];\n            var value = tvPair[1];\n            var txtValue;\n            if (isNumber(value)) {\n\n                self.ctx.$scope.newValue = Number(self.ctx\n                    .utils.formatValue(\n                        value, self.ctx.decimals,\n                        \"\"));\n                txtValue = self.ctx.utils.formatValue(\n                    value, self.ctx.decimals, self.ctx\n                    .units);\n            } else {\n                txtValue = value;\n            }\n\n            self.ctx.$scope.cellValue = txtValue;\n            self.ctx.valueCell.html(txtValue);\n            var targetWidth;\n            var minDelta;\n            if (self.ctx.labelPosition === 'left') {\n                targetWidth = self.ctx.datasourceContainer\n                    .width() - self.ctx.labelCell.width();\n                minDelta = self.ctx.width / 16 + self.ctx\n                    .padding;\n            } else {\n                targetWidth = self.ctx.datasourceContainer\n                    .width();\n                minDelta = self.ctx.padding;\n            }\n            var delta = targetWidth - self.ctx.valueCell\n                .textWidth();\n            var fontSize = self.ctx.valueFontSize;\n            if (targetWidth > minDelta) {\n                while (delta < minDelta && fontSize > 6) {\n                    fontSize--;\n                    self.ctx.valueCell.css('font-size',\n                        fontSize + 'px');\n                    delta = targetWidth - self.ctx.valueCell\n                        .textWidth();\n                }\n            }\n        }\n    }\n    self.ctx.$scope.$digest();\n};\n\nself.onResize = function() {\n    //console.log(\"Resize\");\n    var labelFontSize;\n    if (self.ctx.labelPosition === 'top') {\n        self.ctx.padding = self.ctx.height / 20;\n        labelFontSize = self.ctx.height / 4;\n        self.ctx.valueFontSize = self.ctx.height / 2;\n    } else {\n        self.ctx.padding = self.ctx.width / 50;\n        labelFontSize = self.ctx.height / 2.5;\n        self.ctx.valueFontSize = self.ctx.height / 2;\n        if (self.ctx.width / self.ctx.height <= 2.7) {\n            labelFontSize = self.ctx.width / 7;\n            self.ctx.valueFontSize = self.ctx.width / 6;\n        }\n    }\n    self.ctx.padding = Math.min(2, self.ctx.padding);\n    /* console.log(\"Label Size :\"+labelFontSize);\n\tconsole.log(\"Value Size :\"+self.ctx.valueFontSize);\n\tconsole.log(\"Padding :\"+self.ctx.padding);*/\n    if (self.ctx.labelCell) {\n        self.ctx.$scope.labelCellStyle['font-size'] =\n            labelFontSize + 'px';\n        self.ctx.$scope.labelCellStyle.padding =\n            self.ctx.padding + 'px';\n    }\n    if (self.ctx.valueCell) {\n        self.ctx.$scope.valueCellStyle['font-size'] =\n            self.ctx.valueFontSize + 'px';\n        self.ctx.$scope.valueCellStyle.padding =\n            self.ctx.padding + 'px';\n    }\n};\n\nself.typeParameters = function() {\n    return {\n        maxDatasources: 1,\n        maxDataKeys: 1\n    };\n};\n\n\nself.onDestroy = function() {};",
        "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"labelPosition\": {\n                \"title\": \"Label position\",\n                \"type\": \"string\",\n                \"default\": \"left\"\n            },\n            \"DialogTitle\": {\n                \"title\": \"Dialog title\",\n                \"type\": \"string\",\n                \"default\": \"\"\n            },\n            \"attributeScope\": {\n                \"title\": \"Attribute Scope\",\n                \"type\": \"string\",\n                \"default\": \"Server\"\n            },\n            \"lowLimitEnable\": {\n                \"title\": \"Use low limit\",\n                \"type\": \"boolean\",\n                \"default\": false\n            },\n            \"lowLimit\": {\n                \"title\": \"Low Limit\",\n                \"type\": \"number\",\n                \"default\": -50\n            },\n            \"highLimitEnable\": {\n                \"title\": \"Use high limit\",\n                \"type\": \"boolean\",\n                \"default\": false\n            },\n            \"highLimit\": {\n                \"title\": \"High Limit\",\n                \"type\": \"number\",\n                \"default\":100\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [{\n            \"key\": \"labelPosition\",\n            \"type\": \"rc-select\",\n            \"multiple\": false,\n            \"items\": [{\n                    \"value\": \"left\",\n                    \"label\": \"Left\"\n                },\n                {\n                    \"value\": \"top\",\n                    \"label\": \"Top\"\n                }\n            ]\n        },\n        \"DialogTitle\",\n        {\n            \"key\": \"attributeScope\",\n            \"type\": \"rc-select\",\n            \"multiple\": false,\n            \"items\": [{\n                    \"value\": \"Client\",\n                    \"label\": \"Client\"\n                },\n                {\n                    \"value\": \"Server\",\n                    \"label\": \"Server\"\n                },\n                {\n                    \"value\": \"Shared\",\n                    \"label\": \"Shared\"\n                }\n            ]\n        },\n        \"lowLimitEnable\",\n        \"lowLimit\",\n        \"highLimitEnable\",\n        \"highLimit\"\n        \n    ]\n}",
        "dataKeySettingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"logEnable\": {\n                \"title\": \"Enable log\",\n                \"type\": \"boolean\",\n                \"default\": false\n            },\n            \"logLabel\": {\n                \"title\": \"Log label\",\n                \"type\": \"string\"\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [\n        \"logEnable\",\"logLabel\"\n    ]\n}",
        "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Temp\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.2392660816082064,\"funcBody\":\"var value = Math.random() * 40 - 20;\\nif (value < -60) {\\n\\tvalue = -60;\\n} else if (value > 60) {\\n\\tvalue = 60;\\n}\\n\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"4px\",\"settings\":{\"labelPosition\":\"left\",\"lowLimit\":-50,\"highLimit\":10,\"lowLimitEnable\":false,\"DialogTitle\":\"Seuil alarme temperature haute\",\"highLimitEnable\":false,\"attributeScope\":\"Server\"},\"title\":\"Numeric data input\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"units\":\"Â°C\",\"decimals\":1,\"useDashboardTimewindow\":true,\"showLegend\":false,\"widgetStyle\":{},\"actions\":{}}"
      }
    },
    {
      "alias": "TN_phoneNumber_input",
      "name": "TN Phone number input",
      "descriptor": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 3,
        "resources": [],
        "templateHtml": "<div id='datasourceId' class='tbDatasource-container'>\r\n    <table id='tableId'  class='tbDatasource-table' style=\"text-align: left;\" ng-if=\"labelPosition === 'left'\">\r\n        <col width='20%'>\r\n        <col width='80%'>\r\n        <tr>\r\n            <td class='tbDatasource-data-key' ng-style=\"labelCellStyle\" id='labelCellId' ng-click=\"showPrerenderedDialog()\"><span>{{label}}</span></td>\r\n            <td class='tbDatasource-value' id='cellId' style=\"text-align: left;\" ng-style=\"valueCellStyle\" ng-click=\"showPrerenderedDialog()\"><span>{{cellValue}}</span></td>\r\n        </tr>\r\n    </table>\r\n    <table id='tableId' class='tbDatasource-table' style=\"text-align: center;\" ng-if=\"labelPosition === 'top'\">\r\n        <col width='30%'>\r\n        <col width='70%'>\r\n        <tr style='vertical-align: bottom;'>\r\n            <td class='tbDatasource-data-key' ng-style='labelCellStyle' id='labelCellId' ng-click=\"showPrerenderedDialog()\"><span>{{label}}</span></td>\r\n        </tr>\r\n        <tr>\r\n            <td class='tbDatasource-value' id='cellId' ng-style=\"valueCellStyle\" ng-click=\"showPrerenderedDialog()\"><span>{{cellValue}}</span></td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n<div style=\"visibility: hidden\">\r\n    <form name=\"DialogForm\" ng-submit=\"submit()\">\r\n        <div class=\"md-dialog-container\" id=\"myStaticDialog\">\r\n            <md-dialog>\r\n<md-toolbar md-scroll-shrink>\r\n    <div class=\"md-toolbar-tools\">{{DialogTitle}}</div>\r\n  </md-toolbar>\r\n<md-progress-linear class=\"md-warn\" md-mode=\"indeterminate\" ng-disabled=\"progressDisabled\"></md-progress-linear>                  \r\n                <md-input-container class=\"md-block\">\r\n                    <label>NÂ° Telephone</label>\r\n                    <input required type=\"text\" placeholder=\"NÂ° Tel: 99 999 999\" name=\"dialogData\" ng-model=\"dialogData.value\"  ng-pattern=\"pattern\"\r\n                    />\r\n\r\n                    <div ng-messages=\"DialogForm.dialogData.$error\" multiple md-auto-hide=\"false\">\r\n                        <div ng-message=\"required\">\r\n                            donnÃ©e requise!!!\r\n                        </div>\r\n\r\n                        <div ng-message=\"pattern\">\r\n                            donnÃ©e invalide!!!\r\n                        </div>\r\n\r\n                    </div>\r\n                </md-input-container>\r\n\r\n                <div layout=\"row\" layout-wrap layout-margin layout-align=\"center\">\r\n                    <md-button ng-click=\"close()\" class=\"md-raised md-primary\">\r\n                        Annuler\r\n                    </md-button>\r\n                    <md-button ng-click=\"submit()\" class=\"md-raised md-primary\" ng-disabled=\"!DialogForm.dialogData.$valid\">\r\n                        Valider\r\n                    </md-button>\r\n\r\n                </div>\r\n            </md-dialog>\r\n        </div>\r\n    </form>\r\n</div>",
        "templateCss": "#container {\n    overflow: auto;\n}\n\n.tbDatasource-container {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.tbDatasource-table {\n    width: 100%;\n    height: 100%;\n    border-collapse: collapse;\n    white-space: nowrap;\n    font-weight: 100;\n    text-align: right;\n}\n\n.tbDatasource-table td {\n    padding: 5px;\n    position: relative;\n    box-sizing: border-box;\n}\n\n.tbDatasource-data-key {\n    opacity: 0.7;\n    font-weight: 400;\n    font-size: 3.500rem;\n}\n\n.tbDatasource-value {\n    font-size: 5.000rem;\n}\n",
        "controllerScript": "self.onInit = function() {\n\n    self.ctx.labelPosition = self.ctx.settings.labelPosition ||\n        'left';\n    self.ctx.$scope.labelPosition = self.ctx.labelPosition;\n    self.ctx.$scope.newValue = 0;\n    self.ctx.$scope.valueCellStyle = {};\n    self.ctx.$scope.labelCellStyle = {};\n    self.ctx.$scope.pattern = new RegExp(\n        \"(^[2-9]\\\\d{7}$)|(^[2-9]\\\\d\\\\s\\\\d{3}\\\\s\\\\d{3}$)\"\n    );\n\n    self.ctx.attributeData = {};\n    self.ctx.attributeData.valid = false;\n    self.ctx.log = {};\n\n    self.ctx.attributeData.Scope = \"SERVER_SCOPE\";\n    if (self.ctx.settings.attributeScope == 'Client')\n        self.ctx.attributeData.Scope = 'CLIENT_SCOPE';\n    if (self.ctx.settings.attributeScope == 'Shared')\n        self.ctx.attributeData.Scope = 'SHARED_SCOPE';\n\n    self.ctx.$scope.DialogTitle = self.ctx.settings.DialogTitle ||\n        \"Mise a jour\";\n    var attributeService = self.ctx.$scope.$injector.get(\n        'attributeService');\n    var $mdDialog = self.ctx.$scope.$injector.get(\n        '$mdDialog');\n    self.ctx.CurrentUser = self.ctx.$scope.$injector.get(\n        'userService').getCurrentUser();\n    self.ctx.username = (self.ctx.CurrentUser.firstName ||\n        \"\") + \" \" + (self.ctx.CurrentUser.lastName ||\n        \"\");\n    self.ctx.username += \" \" + (self.ctx.CurrentUser.sub ||\n        \"\");\n    self.ctx.username = self.ctx.username.trim();\n\n    self.ctx.$scope.dialogData = {};\n    self.ctx.$scope.progressDisabled = true;\n\n    if (self.ctx.datasources.length > 0) {\n        var tbDatasource = self.ctx.datasources[0];\n\n        self.ctx.datasourceContainer = $(\n            '#datasourceId', self.ctx.$container);\n        var table = $('#tableId', self.ctx.$container);\n\n        if (tbDatasource.dataKeys.length > 0) {\n            var dataKey = tbDatasource.dataKeys[0];\n            self.ctx.logEnabled = dataKey.settings.logEnable ||\n                false;\n            self.ctx.logLabel = dataKey.settings.logLabel ||\n                \"Numero de notification SMS\";\n            self.ctx.$scope.label = \"â˜Ž\";\n            self.ctx.labelCell = $('#labelCellId',\n                table);\n            self.ctx.valueCell = $('#cellId', table);\n            if (dataKey.type == 'attribute') {\n                self.ctx.attributeData.entityType =\n                    tbDatasource.entityType;\n                self.ctx.attributeData.entityId =\n                    tbDatasource.entityId;\n                self.ctx.attributeData.dataKey = [{}];\n                self.ctx.attributeData.dataKey[0].key =\n                    dataKey.name;\n                self.ctx.attributeData.valid = true;\n            }\n        }\n    }\n\n    self.ctx.$scope.showPrerenderedDialog = function() {\n        if (self.ctx.attributeData.valid) {\n            if (!self.ctx.isEdit) {\n                self.ctx.$scope.dialogData.value =\n                    self.ctx.$scope.newValue;\n\n                self.ctx.oldValue = self.ctx.$scope\n                    .newValue;\n                self.ctx.$scope.progressDisabled =\n                    true;\n                $mdDialog.show({\n                    contentElement: $(\n                        '#myStaticDialog',\n                        self.ctx.$container\n                    ),\n                    parent: angular.element(\n                        document.body)\n                });\n            }\n        }\n    };\n\n    self.ctx.$scope.close = function() {\n        $mdDialog.cancel();\n    };\n    self.ctx.$scope.submit = function() {\n        var logRequest;\n        if (self.ctx.attributeData.valid) {\n            self.ctx.attributeData.dataKey[0].value =\n                self.ctx.$scope.dialogData.value;\n            self.ctx.$scope.progressDisabled =\n                false;\n\n            var requete = attributeService.saveEntityAttributes(\n                self.ctx.attributeData.entityType,\n                self.ctx.attributeData.entityId,\n                self.ctx.attributeData.Scope,\n                self.ctx.attributeData.dataKey);\n\n            requete.then(\n                function success(response) {\n\n                    if (self.ctx.logEnabled) {\n                        self.ctx.log.Parametre =\n                            self.ctx.logLabel;\n                        self.ctx.log[\n                            'Ancienne valeur'\n                        ] = self.ctx.oldValue;\n                        self.ctx.log[\n                                'Nouvelle valeur'\n                            ] = self.ctx.$scope\n                            .dialogData.value;\n                        self.ctx.log.Utilisateur =\n                            self.ctx.username;\n                        var tsData = [{}];\n                        tsData[0].key = \"log\";\n                        tsData[0].value = JSON.stringify(\n                            self.ctx.log,\n                            undefined, 2);\n                        logRequest =\n                            attributeService.saveEntityAttributes(\n                                self.ctx.attributeData\n                                .entityType,\n                                self.ctx.attributeData\n                                .entityId,\n                                \"timeseries/SERVER_SCOPE\",\n                                tsData);\n                    }\n                    self.ctx.$scope.progressDisabled =\n                        true;\n\n                    $mdDialog.cancel();\n                },\n                function fail(rejection) {\n                    self.ctx.$scope.progressDisabled =\n                        true;\n                    $mdDialog.cancel();\n                }\n            );\n        } else {\n            $mdDialog.cancel();\n        }\n    };\n\n    $.fn.textWidth = function() {\n        var html_org = $(this).html();\n        var html_calc = '<span>' + html_org +\n            '</span>';\n        $(this).html(html_calc);\n        var width = $(this).find('span:first').width();\n        $(this).html(html_org);\n        return width;\n    };\n    self.onResize();\n};\n\nself.onDataUpdated = function() {\n    function isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    if (self.ctx.valueCell && self.ctx.data.length > 0) {\n        var cellData = self.ctx.data[0];\n        if (cellData.data.length > 0) {\n            var tvPair = cellData.data[cellData.data.length -\n                1];\n            var txtValue = tvPair[1];\n            self.ctx.$scope.newValue = txtValue;\n            self.ctx.$scope.cellValue = txtValue;\n            self.ctx.valueCell.html(txtValue);\n            var targetWidth;\n            var minDelta;\n            if (self.ctx.labelPosition === 'left') {\n                targetWidth = self.ctx.datasourceContainer\n                    .width() - self.ctx.labelCell.width();\n                minDelta = self.ctx.width / 16 + self.ctx\n                    .padding;\n            } else {\n                targetWidth = self.ctx.datasourceContainer\n                    .width();\n                minDelta = self.ctx.padding;\n            }\n            var delta = targetWidth - self.ctx.valueCell\n                .textWidth();\n            var fontSize = self.ctx.valueFontSize;\n            if (targetWidth > minDelta) {\n                while (delta < minDelta && fontSize > 6) {\n                    fontSize--;\n                    self.ctx.$scope.valueCellStyle[\n                            'font-size'] = fontSize +\n                        'px';\n                    delta = targetWidth - self.ctx.valueCell\n                        .textWidth();\n                }\n            }\n        }\n    }\n    self.ctx.$scope.$digest();\n};\n\nself.onResize = function() {\n\n    var labelFontSize;\n    if (self.ctx.labelPosition === 'top') {\n        self.ctx.padding = 5; //self.ctx.height / 20;\n        labelFontSize = self.ctx.height / 4;\n        self.ctx.valueFontSize = self.ctx.height / 2;\n    } else {\n        self.ctx.padding = 5; //self.ctx.width / 50;\n        labelFontSize = self.ctx.height / 2.5;\n        self.ctx.valueFontSize = self.ctx.height / 2;\n        if (self.ctx.width / self.ctx.height <= 2.7) {\n            labelFontSize = self.ctx.width / 7;\n            self.ctx.valueFontSize = self.ctx.width / 6;\n        }\n    }\n    self.ctx.padding = Math.min(2, self.ctx.padding);\n\n    if (self.ctx.labelCell) {\n        self.ctx.$scope.labelCellStyle['font-size'] =\n            labelFontSize + 'px';\n        self.ctx.$scope.labelCellStyle.padding =\n            self.ctx.padding + 'px';\n    }\n    if (self.ctx.valueCell) {\n        self.ctx.$scope.valueCellStyle['font-size'] =\n            self.ctx.valueFontSize + 'px';\n        self.ctx.$scope.valueCellStyle.padding =\n            self.ctx.padding + 'px';\n    }\n};\n\nself.typeParameters = function() {\n    return {\n        maxDatasources: 1,\n        maxDataKeys: 1\n    };\n};\n\n\nself.onDestroy = function() {};",
        "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"labelPosition\": {\n                \"title\": \"Label position\",\n                \"type\": \"string\",\n                \"default\": \"left\"\n            },\n            \"DialogTitle\": {\n                \"title\": \"Dialog title\",\n                \"type\": \"string\",\n                \"default\": \"\"\n            },\n            \"attributeScope\": {\n                \"title\": \"Attribute Scope\",\n                \"type\": \"string\",\n                \"default\": \"Server\"\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [{\n            \"key\": \"labelPosition\",\n            \"type\": \"rc-select\",\n            \"multiple\": false,\n            \"items\": [{\n                    \"value\": \"left\",\n                    \"label\": \"Left\"\n                },\n                {\n                    \"value\": \"top\",\n                    \"label\": \"Top\"\n                }\n            ]\n        },\n        \"DialogTitle\",\n        {\n            \"key\": \"attributeScope\",\n            \"type\": \"rc-select\",\n            \"multiple\": false,\n            \"items\": [{\n                    \"value\": \"Client\",\n                    \"label\": \"Client\"\n                },\n                {\n                    \"value\": \"Server\",\n                    \"label\": \"Server\"\n                },\n                {\n                    \"value\": \"Shared\",\n                    \"label\": \"Shared\"\n                }\n            ]\n        }\n        \n    ]\n}",
        "dataKeySettingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"logEnable\": {\n                \"title\": \"Enable log\",\n                \"type\": \"boolean\",\n                \"default\": false\n            },\n            \"logLabel\": {\n                \"title\": \"Log label\",\n                \"type\": \"string\"\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [\n        \"logEnable\",\"logLabel\"\n    ]\n}",
        "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"â˜Ž\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.2392660816082064,\"funcBody\":\"var value =\\\"98 300 299\\\"\\n\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"4px\",\"settings\":{\"labelPosition\":\"left\",\"DialogTitle\":\"NÂ° Telephone\",\"attributeScope\":\"Server\"},\"title\":\"TN Phone number input\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"units\":\"Â°C\",\"decimals\":1,\"useDashboardTimewindow\":true,\"showLegend\":false,\"widgetStyle\":{},\"actions\":{}}"
      }
    }
  ]
}